{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nconst TOKEN_KEY = 'token';\n\nconst AuthGuard = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    if (location.pathname !== '/login' && location.pathname !== '/register') {\n      if (!verifyAuth()) {\n        navigate(\"/login\");\n      }\n    }\n  }, [location.pathname, navigate]);\n\n  function verifyAuth() {\n    const token = localStorage.getItem(TOKEN_KEY);\n    if (!token) return false;\n\n    try {\n      const decoded = jwt_decode(token, {\n        complete: true\n      });\n      if (!decoded) return false;\n    } catch (err) {\n      return false;\n    }\n\n    return true;\n  }\n\n  return children;\n};\n\n_s(AuthGuard, \"gMsdikdDs1f1NUVrv3Ag60oK04k=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = AuthGuard;\nexport default AuthGuard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthGuard\");","map":{"version":3,"sources":["C:/javascript/project/GraphViewer/client/src/guard/AuthGuard.js"],"names":["useEffect","useLocation","useNavigate","jwt_decode","TOKEN_KEY","AuthGuard","children","navigate","location","pathname","verifyAuth","token","localStorage","getItem","decoded","complete","err"],"mappings":";;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,kBAAzC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,MAAMC,SAAS,GAAG,OAAlB;;AAEA,MAAMC,SAAS,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAEhC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,QAAQ,GAAGP,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,QAAQ,CAACC,QAAT,KAAsB,QAAtB,IAAkCD,QAAQ,CAACC,QAAT,KAAsB,WAA5D,EAAyE;AACrE,UAAG,CAACC,UAAU,EAAd,EAAiB;AACbH,QAAAA,QAAQ,CAAC,QAAD,CAAR;AACH;AACJ;AACJ,GANQ,EAMN,CAACC,QAAQ,CAACC,QAAV,EAAoBF,QAApB,CANM,CAAT;;AAQA,WAASG,UAAT,GAAsB;AAElB,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqBT,SAArB,CAAd;AAEA,QAAG,CAACO,KAAJ,EAAW,OAAO,KAAP;;AAEX,QAAI;AAEA,YAAMG,OAAO,GAAGX,UAAU,CAACQ,KAAD,EAAQ;AAACI,QAAAA,QAAQ,EAAE;AAAX,OAAR,CAA1B;AAEA,UAAG,CAACD,OAAJ,EAAa,OAAO,KAAP;AAEhB,KAND,CAME,OAAOE,GAAP,EAAW;AAET,aAAO,KAAP;AACH;;AACD,WAAO,IAAP;AACH;;AACD,SAAOV,QAAP;AACH,CAhCD;;GAAMD,S;UAEeH,W,EACAD,W;;;KAHfI,S;AAkCN,eAAeA,SAAf","sourcesContent":["\nimport { useEffect } from 'react'\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nconst TOKEN_KEY = 'token';\n\nconst AuthGuard = ({ children }) => {\n\n    const navigate = useNavigate()\n    const location = useLocation()\n\n    useEffect(() => {\n        if (location.pathname !== '/login' && location.pathname !== '/register') {\n            if(!verifyAuth()){\n                navigate(\"/login\")\n            }\n        }\n    }, [location.pathname, navigate])\n\n    function verifyAuth() {\n\n        const token = localStorage.getItem(TOKEN_KEY);\n\n        if(!token) return false;\n\n        try {\n\n            const decoded = jwt_decode(token, {complete: true});\n    \n            if(!decoded) return false;\n\n        } catch (err){\n\n            return false;\n        }\n        return true;\n    }\n    return children;\n}\n\nexport default AuthGuard;"]},"metadata":{},"sourceType":"module"}